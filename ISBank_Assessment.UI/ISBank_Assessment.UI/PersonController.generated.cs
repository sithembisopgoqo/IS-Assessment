// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace ISBank_Assessment.UI.Controllers
{
    public partial class PersonController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PersonController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PersonController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PersonDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PersonDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SavePerson()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SavePerson);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DeletePerson()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePerson);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckIfAccountIsClosed()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckIfAccountIsClosed);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PersonController Actions { get { return MVC.Person; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Person";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Person";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GetPersons = "GetPersons";
            public readonly string PersonDetails = "PersonDetails";
            public readonly string SavePerson = "SavePerson";
            public readonly string DeletePerson = "DeletePerson";
            public readonly string CheckIfAccountIsClosed = "CheckIfAccountIsClosed";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GetPersons = "GetPersons";
            public const string PersonDetails = "PersonDetails";
            public const string SavePerson = "SavePerson";
            public const string DeletePerson = "DeletePerson";
            public const string CheckIfAccountIsClosed = "CheckIfAccountIsClosed";
        }


        static readonly ActionParamsClass_GetPersons s_params_GetPersons = new ActionParamsClass_GetPersons();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPersons GetPersonsParams { get { return s_params_GetPersons; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPersons
        {
            public readonly string SearchText = "SearchText";
        }
        static readonly ActionParamsClass_PersonDetails s_params_PersonDetails = new ActionParamsClass_PersonDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PersonDetails PersonDetailsParams { get { return s_params_PersonDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PersonDetails
        {
            public readonly string Code = "Code";
        }
        static readonly ActionParamsClass_SavePerson s_params_SavePerson = new ActionParamsClass_SavePerson();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SavePerson SavePersonParams { get { return s_params_SavePerson; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SavePerson
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DeletePerson s_params_DeletePerson = new ActionParamsClass_DeletePerson();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeletePerson DeletePersonParams { get { return s_params_DeletePerson; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeletePerson
        {
            public readonly string code = "code";
        }
        static readonly ActionParamsClass_CheckIfAccountIsClosed s_params_CheckIfAccountIsClosed = new ActionParamsClass_CheckIfAccountIsClosed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckIfAccountIsClosed CheckIfAccountIsClosedParams { get { return s_params_CheckIfAccountIsClosed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckIfAccountIsClosed
        {
            public readonly string AccountNumber = "AccountNumber";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string GetPersons = "GetPersons";
            }
            public readonly string GetPersons = "~/Views/Person/GetPersons.cshtml";
            static readonly _PartialClass s_Partial = new _PartialClass();
            public _PartialClass Partial { get { return s_Partial; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PartialClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string PersonDetails = "PersonDetails";
                }
                public readonly string PersonDetails = "~/Views/Person/Partial/PersonDetails.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PersonController : ISBank_Assessment.UI.Controllers.PersonController
    {
        public T4MVC_PersonController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GetPersonsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SearchText);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> GetPersons(string SearchText)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPersons);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SearchText", SearchText);
            GetPersonsOverride(callInfo, SearchText);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void PersonDetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? Code);

        [NonAction]
        public override System.Web.Mvc.ActionResult PersonDetails(int? Code)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PersonDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Code", Code);
            PersonDetailsOverride(callInfo, Code);
            return callInfo;
        }

        [NonAction]
        partial void SavePersonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ISBank_Assessment.UI.Models.EditPersonModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SavePerson(ISBank_Assessment.UI.Models.EditPersonModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SavePerson);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SavePersonOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void DeletePersonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int code);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DeletePerson(int code)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePerson);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "code", code);
            DeletePersonOverride(callInfo, code);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void CheckIfAccountIsClosedOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string AccountNumber);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckIfAccountIsClosed(string AccountNumber)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckIfAccountIsClosed);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AccountNumber", AccountNumber);
            CheckIfAccountIsClosedOverride(callInfo, AccountNumber);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
